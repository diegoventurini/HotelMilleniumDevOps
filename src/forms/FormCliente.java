/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import classes.Cliente;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextField;

/**
 *
 * @author diego
 */
public class FormCliente extends javax.swing.JFrame {
    public Cliente cli = null;
    /**
     * Creates new form CadastroCliente
     */
    public FormCliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgSexo = new javax.swing.ButtonGroup();
        lbCpf = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        lbTelefone = new javax.swing.JLabel();
        tfTelefone = new javax.swing.JFormattedTextField();
        lbDataNascimento = new javax.swing.JLabel();
        lbEmail = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        lbNome = new javax.swing.JLabel();
        tfCpf = new javax.swing.JFormattedTextField();
        tfDataNascimento = new javax.swing.JFormattedTextField();
        btBuscarCPF = new javax.swing.JButton();
        btAtualizar = new javax.swing.JButton();
        btCadastrar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        rbMasculino = new javax.swing.JRadioButton();
        rbFeminino = new javax.swing.JRadioButton();
        btLimpar = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        lbImagemCliente = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de clientes");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbCpf.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbCpf.setForeground(new java.awt.Color(0, 0, 102));
        lbCpf.setText("CPF:");
        getContentPane().add(lbCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, 30));
        getContentPane().add(tfNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 150, -1));

        lbTelefone.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbTelefone.setForeground(new java.awt.Color(0, 0, 102));
        lbTelefone.setText("Telefone:");
        getContentPane().add(lbTelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        try {
            tfTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        getContentPane().add(tfTelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 100, -1));

        lbDataNascimento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbDataNascimento.setForeground(new java.awt.Color(0, 0, 102));
        lbDataNascimento.setText("Data de Nascimento:");
        getContentPane().add(lbDataNascimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, -1, -1));

        lbEmail.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbEmail.setForeground(new java.awt.Color(0, 0, 102));
        lbEmail.setText("Email:");
        getContentPane().add(lbEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, 40, -1));
        getContentPane().add(tfEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 194, -1));

        lbNome.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbNome.setForeground(new java.awt.Color(0, 0, 102));
        lbNome.setText("Nome Completo:");
        getContentPane().add(lbNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        try {
            tfCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tfCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCpfActionPerformed(evt);
            }
        });
        getContentPane().add(tfCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 100, 30));

        try {
            tfDataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        getContentPane().add(tfDataNascimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, 80, -1));

        btBuscarCPF.setBackground(new java.awt.Color(255, 255, 255));
        btBuscarCPF.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btBuscarCPF.setForeground(new java.awt.Color(0, 0, 102));
        btBuscarCPF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icBuscar.png"))); // NOI18N
        btBuscarCPF.setText("Buscar CPF");
        btBuscarCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarCPFActionPerformed(evt);
            }
        });
        getContentPane().add(btBuscarCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 130, 40));

        btAtualizar.setBackground(new java.awt.Color(255, 255, 255));
        btAtualizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btAtualizar.setForeground(new java.awt.Color(0, 0, 102));
        btAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icAtualizar2.png"))); // NOI18N
        btAtualizar.setText("Atualizar");
        btAtualizar.setEnabled(false);
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btAtualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 120, 50));

        btCadastrar.setBackground(new java.awt.Color(255, 255, 255));
        btCadastrar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btCadastrar.setForeground(new java.awt.Color(0, 0, 102));
        btCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icIncluirCliente.png"))); // NOI18N
        btCadastrar.setText("Cadastrar");
        btCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastrarActionPerformed(evt);
            }
        });
        getContentPane().add(btCadastrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, 51));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sexo:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(0, 0, 102));

        bgSexo.add(rbMasculino);
        rbMasculino.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rbMasculino.setForeground(new java.awt.Color(0, 0, 102));
        rbMasculino.setText("Masculino");
        rbMasculino.setActionCommand("Masculino");

        bgSexo.add(rbFeminino);
        rbFeminino.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rbFeminino.setForeground(new java.awt.Color(0, 0, 102));
        rbFeminino.setText("Feminino");
        rbFeminino.setActionCommand("Feminino");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbMasculino)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbFeminino)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbMasculino)
                    .addComponent(rbFeminino))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 200, -1));

        btLimpar.setBackground(new java.awt.Color(255, 255, 255));
        btLimpar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btLimpar.setForeground(new java.awt.Color(0, 0, 102));
        btLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icLimpar.png"))); // NOI18N
        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });
        getContentPane().add(btLimpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, -1, 51));

        btSair.setBackground(new java.awt.Color(255, 255, 255));
        btSair.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btSair.setForeground(new java.awt.Color(0, 0, 102));
        btSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icSair.png"))); // NOI18N
        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });
        getContentPane().add(btSair, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 310, -1, 51));

        lbImagemCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Cliente22.jpg"))); // NOI18N
        getContentPane().add(lbImagemCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 490, 380));

        setSize(new java.awt.Dimension(506, 408));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private Boolean verificaText() {
        JTextField[] textos = {this.tfNome, this.tfEmail};
        for (JTextField t : textos) {
            if (t.getText().equals("")) {
                t.requestFocus();
                return false;
            }
        }
        return true;
    }

    private Boolean verificaCPF() {
        if (this.tfCpf.getText().equals("   .   .   -  ")) {
            this.tfCpf.requestFocus();
            return false;
        } else {
            return true;
        }
    }

    private Boolean verificaTelefone() {
        if (this.tfTelefone.getText().equals("(  )    -    ")) {
            this.tfTelefone.requestFocus();
            return false;
        } else {
            return true;
        }
    }

    private Boolean verificaData() {
        if (this.tfDataNascimento.getText().equals("  /  /    ")) {
            this.tfDataNascimento.requestFocus();
            return false;
        } else {
            return true;
        }
    }

    public Boolean verificaMascara() {
        if (this.verificaTelefone()) {
            if (this.verificaData()) {
                return this.verificaCPF();
            }
        }
        return false;
    }

    public Boolean verificaRadio() {
        Object b = this.bgSexo.getSelection();
        if (b == null) {
            return false;
        } else {
            return true;
        }
    }

    private Boolean verificaCampos() {
        if (this.verificaText()) {
            if (this.verificaMascara()) {
                return this.verificaRadio();
            }
        }

        return false;
    }

    private void limparDados() {
        tfNome.setText("");
        tfTelefone.setText("");
        tfCpf.setText("");
        tfEmail.setText("");
        tfDataNascimento.setText("");
        bgSexo.clearSelection();

        tfNome.requestFocus();
    }

    private void preencheDados(Boolean cadastra) {
        Cliente c = new Cliente();

        c.setNome(tfNome.getText());
        c.setEmail(tfEmail.getText());
        c.setTelefone(tfTelefone.getText());
        c.setCpf(tfCpf.getText());

        Boolean val = (bgSexo.getSelection().getActionCommand().equals("Masculino")) ? true : false;
        c.setSexo(val);

        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        try {
            df.setLenient(false);
            Date dt = df.parse(tfDataNascimento.getText());
            c.setDataNascimento(dt);

            if (cadastra) {
                FormPrincipal.clienteDAO.adicionarCliente(c);
            } else {
                FormPrincipal.clienteDAO.alterarCliente(c);
            }

            JOptionPane.showMessageDialog(null, "Cadastro realizado com sucesso!", "Cadastro", JOptionPane.INFORMATION_MESSAGE);
            this.limparDados();
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Data Invalida", "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void tfCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCpfActionPerformed

    private void btCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastrarActionPerformed

        if (this.verificaCampos()) {
            Cliente c = FormPrincipal.clienteDAO.buscarCliente(tfCpf.getText());
            if (c != null){
                JOptionPane.showMessageDialog(null, "Já existe esse CPF cadastrado.", "Aviso", JOptionPane.WARNING_MESSAGE);
                return;
            }
            preencheDados(true);
        } else {
            JOptionPane.showMessageDialog(null, "Existe campo sem preencher", "Aviso", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btCadastrarActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        this.limparDados();
    }//GEN-LAST:event_btLimparActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btSairActionPerformed

    private void btBuscarCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarCPFActionPerformed
        if (verificaCPF()) {
            Cliente c = FormPrincipal.clienteDAO.buscarCliente(tfCpf.getText());
            if (c != null) {
                btCadastrar.setEnabled(false);
                btAtualizar.setEnabled(true);
                btBuscarCPF.setEnabled(false);
                btLimpar.setEnabled(false);
                tfCpf.setEnabled(false);

                tfNome.setText(c.getNome());
                tfEmail.setText(c.getEmail());
                tfTelefone.setText(c.getTelefone());
                tfCpf.setText(c.getCpf());

                SimpleDateFormat sdt = new SimpleDateFormat("dd/MM/yyyy");
                tfDataNascimento.setText(sdt.format(c.getDataNascimento()));

                JRadioButton rb;
                Enumeration elementos = bgSexo.getElements();
                String sexo = (c.getSexo()) ? "Masculino" : "Feminino";
                while (elementos.hasMoreElements()) {
                    rb = (JRadioButton) elementos.nextElement();
                    if (rb.getActionCommand().equals(sexo)) {
                        rb.setSelected(true);
                        break;
                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "CPF não encontrado", "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Por favor, preencha o CPF antes de pesquisar", "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btBuscarCPFActionPerformed

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        if (this.verificaCampos()) {
            btBuscarCPF.setEnabled(true);
            btCadastrar.setEnabled(true);
            tfCpf.setEnabled(true);
            btLimpar.setEnabled(true);
            btAtualizar.setEnabled(false);

            preencheDados(false);
        } else {
            JOptionPane.showMessageDialog(null, "Existe campo sem preencher", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btAtualizarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        if (cli != null) {
            btCadastrar.setEnabled(false);
            btAtualizar.setEnabled(true);
            btBuscarCPF.setEnabled(false);
            btLimpar.setEnabled(false);
            tfCpf.setEnabled(false);

            tfNome.setText(cli.getNome());
            tfEmail.setText(cli.getEmail());
            tfTelefone.setText(cli.getTelefone());
            tfCpf.setText(cli.getCpf());

            SimpleDateFormat sdt = new SimpleDateFormat("dd/MM/yyyy");
            tfDataNascimento.setText(sdt.format(cli.getDataNascimento()));

            JRadioButton rb;
            Enumeration elementos = bgSexo.getElements();
            String sexo = (cli.getSexo()) ? "Masculino" : "Feminino";
            while (elementos.hasMoreElements()) {
                rb = (JRadioButton) elementos.nextElement();
                if (rb.getActionCommand().equals(sexo)) {
                    rb.setSelected(true);
                    break;
                }
            }

        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgSexo;
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btBuscarCPF;
    private javax.swing.JButton btCadastrar;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btSair;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lbCpf;
    private javax.swing.JLabel lbDataNascimento;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lbImagemCliente;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbTelefone;
    private javax.swing.JRadioButton rbFeminino;
    private javax.swing.JRadioButton rbMasculino;
    private javax.swing.JFormattedTextField tfCpf;
    private javax.swing.JFormattedTextField tfDataNascimento;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfNome;
    private javax.swing.JFormattedTextField tfTelefone;
    // End of variables declaration//GEN-END:variables
}
